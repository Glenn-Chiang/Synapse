// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @db.VarChar(25)
  bio String? @db.VarChar(500) @default("")
  avatarUrl String? @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTqzQ_T2DGHe-3tHk9z7fqeYzLJ2Tn9vszRmH1TOpZjxynAFhO7ciB10Nh5d-b5_yUFTC8&usqp=CAU")
  messages Message[]
  directMessages DirectMessage[]
  channels UserChannel[]
  createdChannels Channel[] @relation("created")
  chatsInitiated Chat[] @relation("member1")
  chatsReceived Chat[] @relation("member2")
}

model UserChannel {
  userId String
  user User @relation(fields: [userId], references: [id])
  channelId String
  channel Channel @relation(fields: [channelId], references: [id])
  dateJoined DateTime @default(now())
  @@id([userId, channelId])
}

model Channel {
  id String @id @default(uuid())
  name String @db.VarChar(25)
  about String @db.VarChar(500)
  createdAt DateTime @default(now())
  iconUrl String? @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS0UcnHUiJ0s_BfieUWxwoLDk2Ji4xCJ30WVhE5690-7JtoCO6gOrMZpiHqHk_f6ftmSJk&usqp=CAU")
  messages Message[]
  members UserChannel[]
  creatorId String
  creator User @relation("created", fields: [creatorId], references: [id])
}

model Message {
  id String @id @default(uuid())
  text String
  timestamp DateTime @default(now())
  senderId String
  sender User @relation(fields: [senderId], references: [id])
  channelId String
  channel Channel @relation(fields: [channelId], references: [id])
}

model DirectMessage {
  id String @id @default(uuid())
  text String
  timestamp DateTime @default(now())
  senderId String
  sender User @relation(fields: [senderId], references: [id])
  chatId String
  chat Chat @relation(fields: [chatId], references: [id])
}

model Chat {
  id String @id @default(uuid())
  messages DirectMessage[]
  member1Id String
  member2Id String
  member1 User @relation("member1", fields: [member1Id], references: [id])
  member2 User @relation("member2", fields: [member2Id], references: [id])
  @@unique([member1Id, member2Id])
}